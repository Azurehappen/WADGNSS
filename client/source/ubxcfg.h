#ifndef WADGNSS_CLIENT_UBXCFG_H
#define WADGNSS_CLIENT_UBXCFG_H
#define UBX_wait       100000 //0.1s
#include <fcntl.h>
// u-blox configuration commands
const unsigned char ZEDF9P_MSGOUT_OFF[] = {
    0xB5, 0x62, 0x06, 0x8A, 0xB3, 0x00, 0x00, 0x01, 0x00, 0x00, 0xB7, 0x01,
    0x91, 0x20, 0x00, 0xA8, 0x01, 0x91, 0x20, 0x00, 0x57, 0x03, 0x91, 0x20,
    0x00, 0xBC, 0x01, 0x91, 0x20, 0x00, 0x99, 0x01, 0x91, 0x20, 0x00, 0x5C,
    0x03, 0x91, 0x20, 0x00, 0xA3, 0x01, 0x91, 0x20, 0x00, 0x9E, 0x01, 0x91,
    0x20, 0x00, 0x68, 0x00, 0x91, 0x20, 0x00, 0x3B, 0x00, 0x91, 0x20, 0x00,
    0x62, 0x01, 0x91, 0x20, 0x00, 0xA4, 0x00, 0x91, 0x20, 0x00, 0x31, 0x00,
    0x91, 0x20, 0x00, 0x36, 0x00, 0x91, 0x20, 0x00, 0x81, 0x00, 0x91, 0x20,
    0x00, 0x13, 0x00, 0x91, 0x20, 0x00, 0x27, 0x00, 0x91, 0x20, 0x00, 0x2C,
    0x00, 0x91, 0x20, 0x00, 0x09, 0x00, 0x91, 0x20, 0x00, 0x90, 0x00, 0x91,
    0x20, 0x00, 0x18, 0x00, 0x91, 0x20, 0x00, 0x1D, 0x00, 0x91, 0x20, 0x00,
    0x8B, 0x00, 0x91, 0x20, 0x00, 0x54, 0x00, 0x91, 0x20, 0x00, 0x59, 0x00,
    0x91, 0x20, 0x00, 0x4F, 0x00, 0x91, 0x20, 0x00, 0x4A, 0x00, 0x91, 0x20,
    0x00, 0x63, 0x00, 0x91, 0x20, 0x00, 0x5E, 0x00, 0x91, 0x20, 0x00, 0x40,
    0x00, 0x91, 0x20, 0x00, 0x45, 0x00, 0x91, 0x20, 0x00, 0x07, 0x02, 0x91,
    0x20, 0x00, 0x34, 0x02, 0x91, 0x20, 0x00, 0x80, 0x01, 0x91, 0x20, 0x00,
    0x48, 0x03, 0x91, 0x20, 0x00, 0x13, 0x8B};

const unsigned char ZEDF9P_GGAPUBX00_ON[] = {
    0xB5, 0x62, 0x06, 0x8A, 0x13, 0x00, 0x00, 0x01, 0x00,
    0x00, 0xBD, 0x00, 0x91, 0x20, 0x01, 0xEF, 0x00, 0x91,
    0x20, 0x01, 0x04, 0x00, 0x77, 0x10, 0x01, 0x40, 0x60};

const unsigned char ZEDF9P_15ELEV[] = {0xB5, 0x62, 0x06, 0x8A, 0x09, 0x00,
                                       0x00, 0x01, 0x00, 0x00, 0xA4, 0x00,
                                       0x11, 0x20, 0x0A, 0x79, 0xE2};

const unsigned char ZEDF9P_GPSONLY[] = {
    0xB5, 0x62, 0x06, 0x8A, 0x4F, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01,
    0x00, 0x31, 0x10, 0x01, 0x03, 0x00, 0x31, 0x10, 0x01, 0x07, 0x00,
    0x31, 0x10, 0x01, 0x0A, 0x00, 0x31, 0x10, 0x01, 0x0D, 0x00, 0x31,
    0x10, 0x01, 0x0E, 0x00, 0x31, 0x10, 0x00, 0x12, 0x00, 0x31, 0x10,
    0x01, 0x15, 0x00, 0x31, 0x10, 0x01, 0x18, 0x00, 0x31, 0x10, 0x01,
    0x1A, 0x00, 0x31, 0x10, 0x01, 0x1F, 0x00, 0x31, 0x10, 0x01, 0x21,
    0x00, 0x31, 0x10, 0x00, 0x22, 0x00, 0x31, 0x10, 0x00, 0x24, 0x00,
    0x31, 0x10, 0x00, 0x25, 0x00, 0x31, 0x10, 0x00, 0xEE, 0x9B};

const unsigned char M8P_GGAON[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                   0xF0, 0x00, 0x00, 0x00, 0x00, 0x01,
                                   0x00, 0x00, 0x00, 0x26};

const unsigned char M8P_GLLOFF[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                    0xF0, 0x01, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x2A};

const unsigned char M8P_GSAOFF[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                    0xF0, 0x02, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x01, 0x31};

const unsigned char M8P_GSVOFF[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                    0xF0, 0x03, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x02, 0x38};

const unsigned char M8P_RMCOFF[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                    0xF0, 0x04, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x03, 0x3F};

const unsigned char M8P_VTGOFF[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                    0xF0, 0x05, 0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x04, 0x46};

const unsigned char M8P_PUBX00ON[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00,
                                      0xF1, 0x00, 0x00, 0x00, 0x00, 0x01,
                                      0x00, 0x00, 0x01, 0x2E};

const unsigned char M8P_GPSONLY[] = {
    0xB5, 0x62, 0x06, 0x3E, 0x24, 0x00, 0x00, 0x00, 0x1E, 0x04, 0x00,
    0x08, 0x10, 0x00, 0x01, 0x00, 0x01, 0x01, 0x03, 0x08, 0x10, 0x00,
    0x00, 0x00, 0x01, 0x01, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00};

const unsigned char M8P_15ELEV[] = {
    0xB5, 0x62, 0x06, 0x24, 0x24, 0x00, 0xFF, 0xFF, 0x00, 0x03, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x0F, 0x00, 0xFA, 0x00,
    0xFA, 0x00, 0x64, 0x00, 0x5E, 0x01, 0x00, 0x1E, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6D, 0xCA};

bool init_ublox(int fd, int UBX_TYPE){
  if (UBX_TYPE == 2){
    if (write(fd,ZEDF9P_MSGOUT_OFF,sizeof(ZEDF9P_MSGOUT_OFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,ZEDF9P_GGAPUBX00_ON,sizeof(ZEDF9P_GGAPUBX00_ON))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,ZEDF9P_15ELEV,sizeof(ZEDF9P_15ELEV))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,ZEDF9P_GPSONLY,sizeof(ZEDF9P_GPSONLY))==-1){
      return false;
    }
    usleep(UBX_wait);
    return true;
  } else if (UBX_TYPE == 1) {
    if (write(fd,M8P_GGAON,sizeof(M8P_GGAON))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_GLLOFF,sizeof(M8P_GLLOFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_GSAOFF,sizeof(M8P_GSAOFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_GSVOFF,sizeof(M8P_GSVOFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_RMCOFF,sizeof(M8P_RMCOFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_VTGOFF,sizeof(M8P_VTGOFF))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_PUBX00ON,sizeof(M8P_PUBX00ON))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_GPSONLY,sizeof(M8P_GPSONLY))==-1){
      return false;
    }
    usleep(UBX_wait);
    if (write(fd,M8P_15ELEV,sizeof(M8P_15ELEV))==-1){
      return false;
    }
    usleep(UBX_wait);
    return true;
  } else {
    return false;
  }
}

#endif  // WADGNSS_CLIENT_UBXCFG_H
